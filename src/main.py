import os
import json
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
WEB_APP_URL = "https://podrugematch3.netlify.app/"

PRIZES = {
    1: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 500‚ÇΩ",
    2: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 1000‚ÇΩ",
    3: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 1500‚ÇΩ",
    4: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 2000‚ÇΩ",
    5: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 2500‚ÇΩ",
    6: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 3000‚ÇΩ",
    7: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 3500‚ÇΩ",
    8: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 4000‚ÇΩ",
    9: "üéÅ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 4500‚ÇΩ",
    10: "üèÜ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ 5000‚ÇΩ ‚Äî —Ç—ã —á–µ–º–ø–∏–æ–Ω!"
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[KeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ Match-3!", web_app=WebAppInfo(url=WEB_APP_URL))]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, —Å—ã–≥—Ä–∞–π –≤ –∏–≥—Ä—É '3 –≤ —Ä—è–¥'!\n –ß–µ–º –±–æ–ª—å—à–µ —Å–º–æ–∂–µ—à—å –Ω–∞–±—Ä–∞—Ç—å –æ—á–∫–æ–≤, —Ç–µ–º –ª—É—á—à–µ –±–æ–Ω—É—Å —Å–º–æ–∂–µ—à—å –∑–∞–±—Ä–∞—Ç—å!\n\n"
                                    "10 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 500—Ä\n"
                                    "20 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 1000—Ä\n"
                                    "30 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 1500—Ä\n"
                                    "40 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 2000—Ä\n"
                                    "50 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 2500—Ä\n"
                                    "60 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 3000—Ä\n"
                                    "70 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 3500—Ä\n"
                                    "80 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 4000—Ä\n"
                                    "90 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 4500—Ä\n"
                                    "100 –æ—á–∫–æ–≤: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç 5000—Ä\n\n"
                                    "–ì–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ? –ó–∞–ø—É—Å–∫–∞–π –µ—ë –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ!",
                                    reply_markup=reply_markup)

async def handle_keyboard_press(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "üéÆ –ò–≥—Ä–∞—Ç—å –≤ Match-3!":
        await update.message.reply_text(f"–ó–∞–ø—É—Å–∫–∞–π –∏–≥—Ä—É —Ç—É—Ç üëâ {WEB_APP_URL}")

async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = update.effective_message.web_app_data.data
    try:
        parsed = json.loads(data)
        score = int(parsed.get("score", 0))
        level = score // 10
        prize = PRIZES.get(level)
        if prize:
            await update.message.reply_text(
                f"–¢–≤–æ–∏ –Ω–∞–±—Ä–∞–Ω–Ω—ã–µ –æ—á–∫–∏üíØ:  {score}\n"
                f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –ø–æ–ª—É—á–∞–µ—à—å: {prize}"
            )
        else:
            await update.message.reply_text(
                f"–¢–≤–æ–∏ –Ω–∞–±—Ä–∞–Ω–Ω—ã–µ –æ—á–∫–∏üíØ:  {score}\n"
                f"–ü—Ä–æ–¥–æ–ª–∂–∞–π –∏–≥—Ä–∞—Ç—å, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∏–∑! üí™"
            )
    except Exception as e:
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏–≥—Ä—ã.")

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("üéÆ –ò–≥—Ä–∞—Ç—å –≤ Match-3!"), handle_keyboard_press))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))
    app.run_polling()

if __name__ == "__main__":
    main()